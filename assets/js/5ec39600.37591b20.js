"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[956],{8545:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>l});var i=n(7462),r=(n(7378),n(3905)),c=n(7649);const t={sidebar_position:2},d="Creating Accordion",s={unversionedId:"docs/headless-ui/accordion",id:"docs/headless-ui/accordion",title:"Creating Accordion",description:"First, we create an Accordion component with useAccordion, useAccordionProvider, and",source:"@site/docs/docs/headless-ui/accordion.mdx",sourceDirName:"docs/headless-ui",slug:"/docs/headless-ui/accordion",permalink:"/react-accordion/docs/headless-ui/accordion",draft:!1,editUrl:"https://github.com/szhsin/react-accordion/tree/master/website/docs/docs/headless-ui/accordion.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"When to Use",permalink:"/react-accordion/docs/headless-ui/intro"},next:{title:"Creating AccordionItem",permalink:"/react-accordion/docs/headless-ui/accordion-item"}},a={},l=[],u={toc:l};function p(o){let{components:e,...n}=o;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-accordion"},"Creating Accordion"),(0,r.kt)("p",null,"First, we create an ",(0,r.kt)("inlineCode",{parentName:"p"},"Accordion")," component with ",(0,r.kt)("inlineCode",{parentName:"p"},"useAccordion"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"useAccordionProvider"),", and\n",(0,r.kt)("inlineCode",{parentName:"p"},"AccordionProvider")," exported from the library."),(0,r.kt)(c.Z,{language:"jsx",mdxType:"CodeBlock"},"import React from 'react';\nimport {\n  useAccordion,\n  useAccordionProvider,\n  AccordionProvider\n} from '@szhsin/react-accordion';\nimport styles from '../accordion/styles.module.css';\n\nconst Accordion = ({ children }: { children: React.ReactNode }) => {\n  const providerValue = useAccordionProvider({\n    // Omit these two options if you don't want to implement any transition\n    // highlight-start\n    transition: true,\n    transitionTimeout: 250\n    // highlight-end\n  });\n  const { accordionProps } = useAccordion();\n\n  return (\n    <AccordionProvider value={providerValue}>\n      <div className={styles.accordion} {...accordionProps}>\n        {children}\n      </div>\n    </AccordionProvider>\n  );\n};\n\nexport default Accordion;\n"))}p.isMDXComponent=!0}}]);