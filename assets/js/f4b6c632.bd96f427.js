"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[865],{6353:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7378),n(3905));const i={sidebar_position:5},o="useAccordionProvider",l={unversionedId:"api/hooks/useAccordionProvider",id:"api/hooks/useAccordionProvider",title:"useAccordionProvider",description:"Parameter object",source:"@site/docs/api/hooks/useAccordionProvider.md",sourceDirName:"api/hooks",slug:"/api/hooks/useAccordionProvider",permalink:"/react-accordion/api/hooks/useAccordionProvider",draft:!1,editUrl:"https://github.com/szhsin/react-accordion/tree/master/website/docs/api/hooks/useAccordionProvider.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"apiSidebar",previous:{title:"useHeightTransition",permalink:"/react-accordion/api/hooks/useHeightTransition"},next:{title:"useAccordionState",permalink:"/react-accordion/api/hooks/useAccordionState"}},d={},p=[{value:"Parameter object",id:"parameter-object",level:2},{value:"Return object",id:"return-object",level:2}],s={toc:p};function c(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"useaccordionprovider"},"useAccordionProvider"),(0,r.kt)("h2",{id:"parameter-object"},"Parameter object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"allowMultiple")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Allow multiple accordion items to expand at once.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"initialEntered")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Make all accordion items expanded when initially mounted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mountOnEnter")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Lazily mount ",(0,r.kt)("inlineCode",{parentName:"td"},"children")," of accordion items until they are expanded. Use this option if you don't need to server-side render accordion item contents.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unmountOnExit")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Unmount ",(0,r.kt)("inlineCode",{parentName:"td"},"children")," of accordion items after they are collapsed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transition")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/szhsin/react-accordion/blob/7eddacda0928b23bde05ad2299d9b5e27efd4995/types/utils/constants.d.ts#L16"},"View on GitHub")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable or disable transition. Accept a single boolean value or each individual transition stage in an object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transitionTimeout")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/szhsin/react-accordion/blob/7eddacda0928b23bde05ad2299d9b5e27efd4995/types/utils/constants.d.ts#L32"},"View on GitHub")),(0,r.kt)("td",{parentName:"tr",align:null},'Set transition duration. Accept a single number or individual "enter" or "exit" stage in an object.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onStateChange")),(0,r.kt)("td",{parentName:"tr",align:null},"(event: { key: ItemKey; current: TransitionState }) => void"),(0,r.kt)("td",{parentName:"tr",align:null},"Event to notify state changes in any accordion items.")))),(0,r.kt)("h2",{id:"return-object"},"Return object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"toggle")),(0,r.kt)("td",{parentName:"tr",align:null},"(key: ItemKey, toEnter?: boolean) => void"),(0,r.kt)("td",{parentName:"tr",align:null},"A function to toggle item state by providing an item key.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"toggleAll")),(0,r.kt)("td",{parentName:"tr",align:null},"(toEnter?: boolean ) => void"),(0,r.kt)("td",{parentName:"tr",align:null},"A function to toggle all item states at the same time.")))),(0,r.kt)("admonition",{title:"NOTE",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The return object contains some other properties which are considered implementation details and should not be used externally.")))}c.isMDXComponent=!0}}]);